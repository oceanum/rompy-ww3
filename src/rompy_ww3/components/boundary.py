"""Boundary component for WW3 configuration."""

from typing import Optional
from ..namelists.bound import Bound
from .basemodel import WW3ComponentBaseModel


class BoundaryComponent(WW3ComponentBaseModel):
    """Component for ww3_bound.nml containing boundary configuration."""

    bound: Optional[Bound] = None

    def render(self) -> str:
        """Render the boundary component as a combined namelist string."""
        bound_content = []
        bound_content.append("! WW3 boundary preprocessing configuration")
        bound_content.append("! Generated by rompy-ww3")
        bound_content.append("")

        # Add BOUND_NML if defined
        if self.bound:
            rendered = self.bound.render().replace("\\n", "\n")
            bound_content.extend(rendered.split("\n"))
            bound_content.append("")
        else:
            # Default boundary configuration
            bound_content.append("&BOUND_NML")
            bound_content.append("  BOUND%MODE   = 'READ'")
            bound_content.append("  BOUND%FILE   = 'bound_spec.nc'")
            bound_content.append("  BOUND%INTERP =  2")
            bound_content.append("/")
            bound_content.append("")

        return "\n".join(bound_content)
