"""Point output component for WW3 configuration."""

from typing import Optional
from ..namelists.pointoutput import PointOutput
from .basemodel import WW3ComponentBaseModel


class Ounp(WW3ComponentBaseModel):
    """Component for ww3_ounp.nml containing point (NetCDF) output configuration."""

    point_output: Optional[PointOutput] = None

    def render(self, destdir=None, *args, **kwargs) -> str:
        """Render the point output component as a combined namelist string."""
        ounp_content = []
        ounp_content.append("! WW3 point output configuration")
        ounp_content.append("! Generated by rompy-ww3")
        ounp_content.append("")

        # Add POINT OUTPUT NML if defined
        if self.point_output:
            rendered = self.point_output.render().replace("\\n", "\n")
            ounp_content.extend(rendered.split("\n"))
            ounp_content.append("")
        else:
            # Default point output configuration
            ounp_content.append("&OUNP_NML")
            ounp_content.append("  OUNP%ACTIVE = 'T'  ! Enable point output")
            ounp_content.append("  OUNP%NSETS = 1     ! Number of point sets")
            ounp_content.append("/")
            ounp_content.append("")

        return "\n".join(ounp_content)
